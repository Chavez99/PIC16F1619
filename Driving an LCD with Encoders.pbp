'****************************************************************
'*  Name    : Practice #9. Driving an LCD Display with Encoders *
'*  Author  : Chavez Murga Arturo Alejandro                     *
'*  Notice  : Copyright (c) 2020 Tecnologico de Mexicali        *
'*          : All Rights Reserved                               *
'*  Date    : 19/03/2020                                        *
'*  Version : 1.0                                               *
'*  Notes   :                                                   *
'*          :                                                   *
'****************************************************************
;XXXXXXXXXXXXXXXXXXXXXXXXXXX PIC16F1619 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
TRISA =%111100;                 RA0:RA1 AS OUTPUTS, RA2:RA5 AS INPUT
TRISB =%00010000;               RB0:RB3 AS OUTPUT,RB4 AS INPUT, RB5:RB7 AS OUTPUT
TRISC =%11000000;               RC0:RC5 AS OUTPUT,RC6:RC7 AS INPUT
ANSELA =0;                      ALL PINS ARE DIGITALS
ANSELB= 0;                      ALL PINS ARE DIGITAL
ANSELC=0;                       PORTC SET AS DIGITAL
LATA = 0 : LATB = 0: LATC = 0;  ALL LATCHES ARE DISABLED
OSCCON =%01101000;              SET 4MHZ EXTERNAL OSC 
OSCTUNE = 0;                    CLOCK WORKING WITH FACTORY CALIBRATION
;-----------------------------pull ups------------------------------------------
OPTION_REG.7 = 0;               PULL UPS INTERN IS ENABLE
WPUB.4 = 1;                     ENABLE PULL UP IN RB4
WPUA = %111100;                 RA2:RA5 PULL UPS IS ENABLE 
WPUC = %11000000;               RC6:RC7 PULL UP IS ENEABLE
;-------------------------------------------------------------------------------
;----------------------------SET ALIAS------------------------------------------
A_OUT VAR PORTC.0;                      Set Ao and store its contents on RC0 
B_OUT VAR PORTC.1;                      Set Bo and store its contents on RC1
C_OUT VAR PORTC.2;                      Set Co and store its contents on RC2
D_OUT VAR PORTC.3;                      Set Do and store its contents on RC3
CCP1 VAR PORTC.5;                       Decimal point content is stored on RC5
;---                                IN THIS ZONE, YOU CAN MODIFY THE PINS TO USE
L1 VAR PORTC.4;                         Store the contents of 1st latch on RC4
L2 VAR PORTA.1;                         Store the contents of 2nd latch on RC1
L3 VAR PORTA.0;                         Store the contents of 3rd latch on RC0
;---
PB VAR PORTB.4;                         PB is stored on RB4
;----
A_IN VAR PORTA.2;                       Set Ai and store its contents on RA2
B_IN VAR PORTA.3;                       Set Ai and store its contents on RA3
C_IN VAR PORTA.4;                       Set Ai and store its contents on RA4
D_IN VAR PORTA.5;                       Set Ai and store its contents on RA5
;----
X1 VAR PORTC.6;                         Set X1 and store its contents on RC6
X2 VAR PORTC.7;                         Set X1 and store its contents on RC7
;-------------------------------------------------------------------------------
;-------------------------HPWM SET 250hz----------------------------------------
RC5PPS = %00001100;  SETTING CCP1 AS AN OUTPUT AND ENABLE IT
CCP1CON = %10001100; PWM mode selection and CCPx enabled
PR2 = %11111101;     Value obtained from equation
T2CON = %11000000;   Enabling timer 2
CCPTMRS = %11111100; CCP1 IS BASED OFF TIMER 2
CCPR1L = %11110100;  VALUE obtained from equation
CCPR1H =%00000001;   VALUE obtained from equation
;-----------------------------------------------------------------------------
;---------------------------VARIABLES-------------------------------------------
SEL VAR BYTE;        SELECTION OF THE DIGIT
PATTERN VAR BYTE;
;-------------------------------------------------------------------------------
;-------------------------ALGORITHM---------------------------------------------
SEL = 0;             CLEAR THE VARIABLE SEL;
RPT:;                LABEL RPT

HERE:;                  LABEL HERE
A_OUT = A_IN;           PIN A_OUT IS EQUAL TO A_IN
B_OUT = B_IN;           PIN B_OUT IS EQUAL TO B_IN
C_OUT = C_IN;           PIN C_OUT IS EQUAL TO C_IN
D_OUT = D_IN;           PIN D_OUT IS EQUAL TO D_IN
IF PB = 1 THEn HERE;    IF PUS- BUTTON IS NOT PRESSED, GO TO THE LABEL "HERE"

SEL = X2*2 + X1;                       SAVE THE PINS X1 AND X2 IN THE VARIABLE WITH THE BINARY WEIGHT
lookup SEL,[$00,$01,$02,$04],PATTERN;
L1 = PATTERN.0;
L2 = PATTERN.1;
L3 = PATTERN.2; 
PAUSE 1;                Pause of 1ms
L1 = 0;                 Clear all the latches
L2 = 0;
L3 = 0;
goto rpt;               GO TO THE LABEL RPT;
end;                    END OF THE ALGORITHM
