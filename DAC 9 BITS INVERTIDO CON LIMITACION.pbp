'****************************************************************
'*  Name    : UNTITLED.BAS                                      *
'*  Author  : LEE ALVAREZ ROSADO                                *
'*  Notice  : Copyright (c) 2019 ITM                            *
'*          : All Rights Reserved                               *
'*  Date    : 16/06/2019                                        *
'*  Version : 1.0                                               *
'*  Notes   :                                                   *
'*          :                                                   *
'****************************************************************
OSCCON = %00100110; SET OSC TO 4 Mhz
OSCTUNE = 0; OSCILLATOR RUNIN AT THE CALIBRATED FRECUENCY
TRISA = %010110; SET AS RA1,RA2,RA4 INPUT, RA0,RA3,RA5 OUTPUT
TRISC = 0;SET ALL PINS OUTPUT
ANSELA = %010110; SET AS RA1,RA2,RA4 ANALOG,RA0,RA3,RA5 DIGITAL
ANSELC = %000000; ALL PINS DIGITAL
LATA = %000000; ALL LATCH DISABLED
lATC = %000000; ALL LATCH DISABLED
ADCON0 = %10001011; ADC ON, CHANEL 1
ADCON1 = %01100000; FOSC/64,RIGHT JUSTIFICATION
;---------CREATING VARIABLES--------
ADCIN1 VAR WORD;
ADCINMIN VAR WORD;
ADCINMAX VAR WORD;
VOLTMAX VAR WORD;
VOLTMIN VAR WORD;
VOLTIN VAR WORD;
VOLTDAC VAR WORD;
VCALC VAR WORD[4];
Z VAR WORD;
W VAR WORD;
VMAXDIG VAR BYTE[4];
VMINDIG VAR BYTE[4];
VINDIG VAR BYTE[4];
VMAXLOOK VAR BYTE[4];
VMINLOOK VAR BYTE[4];
VDACDIG VAR BYTE[4];
VDACLOOK VAR BYTE[4];
VINLOOK VAR BYTE[4];
IN VAR BYTE;
OUT VAR BYTE;
X VAR WORD;
Y VAR WORD;
INVERT VAR WORD;
;-------------------
DAC1CON0 = %11100000;
;-------------------
;X VA
DEFINE ADC_SAMPLEUS 50
DEFINE ADC_CLOCK 3;
DEFINE ADC_BITS 10;

;------------------------LCD CONFIGURATION SPI--------------------------------------

SI VAR PORTC.5; SERIAL DATA
CLK VAR PORTC.4; CLOCK
RS VAR PORTC.3; READ STROBE
SYMBOL M = 1;
;------------------------------------------------------------------------------
;INICIAL CONDITION
RS = 0;
SHIFTOUT SI,CLK,M,[$39]; 8 BIT DATA LENGTH, 2 LINES, INSTRUCTION TABLE 10
PAUSEUS 27; MICROSECOND
SHIFTOUT SI,CLK,M,[$1C]; BS: 1/4, 2 LINE LCD
PAUSEUS 27;  27 MICROSECOND
SHIFTOUT SI,CLK,M,[$52]; BOOSTER OFF, CONTRAST C5, SET C4
PAUSEUS 27;  27 MICROSECOND
SHIFTOUT SI,CLK,M,[$69]; BS: 1/4, 2 LINE LCD
PAUSEUS 27;  27 MICROSECOND
SHIFTOUT SI,CLK,M,[$74]; SET CONTRAST C3, C2, C1
PAUSEUS 27;  27 MICROSECOND
SHIFTOUT SI,CLK,M,[$38]; SWITC BACK TO INSTRUCTION TABLE 0
PAUSEUS 27;  27 MICROSECOND
SHIFTOUT SI,CLK,M,[$0C];DISPLAY ON, CURSOR OFF, NO BLINK
PAUSEUS 27;  27 MICROSECOND
SHIFTOUT SI,CLK,M,[$01]; DELETE DISPLAY, CURSOR AT HOME
PAUSEUS 1080;  1080 MICROSECOND
SHIFTOUT SI,CLK,M,[$06]; CURSOR AUTO-INCREMENT
PAUSEUS 27;  27 MICROSECOND
RS = 1;
;-------MAIN METHOD---------------
SHIFTOUT SI,CLK,M,[$01]; CLEAR DISPLAY
PAUSEUS 1080;
SHIFTOUT SI,CLK,M,[$39]; $39 FOR NORMAL HEIGHT
PAUSEUS 27;
;WRITING ON THE FIRST LINE
RS=0
SHIFTOUT SI,CLK,M,[$80]; FIRST LINE DIRECTION
PAUSEUS 27;
RS=1; TO WRITE DATA
SHIFTOUT SI,CLK,M,[" DAC TEST       "];
PAUSEUS 27;
RS = 0; TO WRITE A COMMAND
SHIFTOUT SI,CLK,M,[$C0];SECOND LINE DIRECTION
PAUSEUS 27;
RS = 1; TO WRITE A COMMAND
SHIFTOUT SI,CLK,M,["                "];
PAUSEUS 27;
PAUSE 1000;


;-------------------------------------------------------------------------------
;-------------------
MAIN:
GOSUB ADC_READ; GET APPLIED VOLTAGE IN CHANNELS ANALOG


INVERT = 511 - ADCIN1; INVERT THE READING  
IF (INVERT >= ADCINMIN) AND (INVERT =< ADCINMAX) THEN; CREATE INTERVAL OF USE

X =INVERT; X IS EQUAL AS INVERT VOLTAGE IN CHANEL 3
GOSUB DAC; GO TO LABEL DAC
ELSE; IF STAY OUTSIDE THE INNTERVAL OF USE

    IF INVERT>=ADCINMAX THEN; IF INVERT VOLTAGE IN CHANNEL 3 IS BIGGER THAN VOLTAGE IN CHANNEL 2 
       X = ADCINMAX; X IS EQUAL A VOLTAGE IN CHANNEL 3 
    GOSUB DAC; GO TO LABEL DAC
    ELSE; IF INVERT VOLTAGE IN CHANNEL 3 IS LOWER THAN VOLTAGE IN CHANNEL 1
      X = ADCINMIN; X IS EQUAL A VOLTAGE IN CHANNEL 1 
     
   
    GOSUB DAC; GO TO LABEL DAC
    ENDIF; END IF ADCIN > ADCINMAX;

ENDIF; END IF (ADCIN1>= ADCINMIN) AND (ADCIN1=<ADCINMAX)
GOSUB DECIMAL;  DECODING APPLIED VOLTAGE

RS=0
SHIFTOUT SI,CLK,M,[$80]; FIRST LINE DIRECTION
PAUSEUS 27;
RS=1; TO WRITE DATA
SHIFTOUT SI,CLK,M,["VM:",VMAXLOOK[3],".",VMAXLOOK[2],VMAXLOOK[1]," VIN:",VINLOOK[3],".",VINLOOK[2],VINLOOK[1]];   
PAUSEUS 27;
RS = 0; TO WRITE A COMMAND
SHIFTOUT SI,CLK,M,[$C0];SECOND LINE DIRECTION
PAUSEUS 27;
RS = 1; TO WRITE A COMMAND
SHIFTOUT SI,CLK,M,["Vm:",VMINLOOK[3],".",VMINLOOK[2],VMINLOOK[1]," DAC:",VDACLOOK[3],".",VDACLOOK[2],VDACLOOK[1]];
PAUSEUS 27;
;PAUSE 1000;


PAUSE 20;  PAUSE 20 MILISECONDS

goto MAIN;  GO TO LABEL MAIN
;--------DACR[8]----
DAC:
DAC1REFH = X.8; HIGH REGISTER DAC
DAC1REFL = (X & %0000000011111111) ; MASK AND SAVE IN LOW REGISTER
PAUSE 10; PAUSE 10 MILISECONDS
RETURN; GO BACK TO WHERE IT´S CALLED
;----------------------------------------
ADC_READ:
ADRESH = 0;                  CLEAR HIGH REGISTER ADC
ADRESL = 0;                  CLEAR LOW REGISTER ADC
ADCON0 = %10001111; AN3      SELECT CHANNEL 3
adcin 3,adcin1;              SELECT CHANNEL 3
STY: IF ADCON0.1 = 1 THEN STY;   STAY HERE WHILE IS READING COMPLETED

PAUSE 1; PAUSE 1 MILISECOND
W = 0; VARIABLE 

ADCIN1 = (ADRESH*256)+ADRESL; SAVE REGISTER IN VARIABLE ADCIN1

ADCIN1 = ADCIN1/2; ADCIN1 DIVIDE BY 2, 1023/2 = 511 MAX RESOLUTION
ADRESH = 0;       CLEAR HIGH REGISTER ADC
ADRESL = 0;       CLEAR LOW REGISTER ADC
ADCON0 = %10001011;             AN2  SELECT CHANNEL 2
adcin 2,adcinmin;               SELEC CHANNEL 2
STY2: IF ADCON0.1 = 1 THEN STY2; STAY HERE WHILE IS READING COMPLETED
PAUSE 1;PAUSE 1 MILISECOND

ADCINMIN = (ADRESH*256)+ADRESL; SAVE REGISTER IN VARIABLE ADCINMIN


ADCINMIN = ADCINMIN/2;     ADCINMIN DIVIDE BY 2, 1023/2 = 511 MAX RESOLUTION
ADRESH = 0;     CLEAR HIGH REGISTER ADC
ADRESL = 0;     CLEAR LOW REGISTER ADC

ADCON0 = %10000111; AN1,SELECT CHANNEL 1
adcin 1,adcinmax; SELECT CHANNEL 1
STY3:  IF ADCON0.1 = 1 THEN STY3; STAY HERE WHILE IS READING COMPLETED

PAUSE 1; PAUSE 1 MILISECOND
ADCINMAX = (ADRESH*256)+ADRESL; SAVE REGISTER IN VARIABLE ADCINMAX


ADCINMAX = ADCINMAX/2; ADCINMAX DIVIDE BY 2, 1023/2 = 511 MAX RESOLUTION
ADRESH = 0;  CLEAR HIGH REGISTER ADC
ADRESL = 0;  CLEAR LOW REGISTER ADC
PAUSE 20;    PAUSE 20 MILISECONDS
RETURN;      RETURN TO WHERE IT´S CALLED
;----------------------------------------
DECIMAL:
;-----VIN----
Y = ADCIN1;  SAVE VARIABLE "ADCIN1" IN VARIABLE "Y"
GOSUB OBTAIN_VOLTAJE;  GO TO LABEL OBTAIN_VOLTAJE
VOLTIN = VCALC[0] + VCALC[1] + VCALC[2] + VCALC[3]; GETTING THE TOTAL VOLTAGE IN CHANNEL 3
FOR Z = 0 TO 3;    STARTING LOOP
VINDIG[Z] = VOLTIN DIG Z;   GET DIGIT 0 TO 3 WITH THE VOLTAGE
IN = VINDIG[Z];  SAVE THE DIGIT 0:3 OF "VINDIG" IN VARIABLE "IN"
GOSUB LOOK_UP; GO TO LABEL LOOK_UP
VINLOOK[Z] = OUT; SAVE THE VARIABLE OUT IN VINLOOK0:3
NEXT Z; NEXT LOOP

;----VMAX---

Y = ADCINMAX;    SAVE VARIABLE "ADCINMAX" IN VARIABLE "Y"
GOSUB OBTAIN_VOLTAJE; GO TO LABER OBTAIN_VOLTAJE 
VOLTMAX = VCALC[0] + VCALC[1] + VCALC[2] + VCALC[3]; GETTING THE TOTAL VOLTAGE IN CHANNEL 1
FOR Z = 0 TO 3;         STARTING LOOP
VMAXDIG[Z] = VOLTMAX DIG Z; GET DIGIT 0 TO 3 WITH THE VOLTAGE
IN = VMAXDIG[Z];  SAVE THE DIGIT 0:3 OF "VMAXDIG" IN VARIABLE "IN"
GOSUB LOOK_UP; GO TO LABEL LOOK_UP
VMAXLOOK[Z] = OUT;  SAVE THE VARIABLE OUT IN VMAXLOOK0:3
NEXT Z;                  NEXT LOOP

;------
;------VMIN-----
Y = ADCINMIN;   SAVE VARIABLE "ADCINMAX" IN VARIABLE "Y"
GOSUB OBTAIN_VOLTAJE; GO TO LABEL OBTAIN_VOLTAJE
VOLTMIN = VCALC[0] + VCALC[1] + VCALC[2] + VCALC[3]; GETTINT THE VOLTAGE IN CHANNEL 2
FOR Z = 0 TO 3;  STARTINF LOOP
VMINDIG[Z] = VOLTMIN DIG Z; GET DIGIT 0 TO 3 WITH THE VOLTAGE
IN = VMINDIG[Z]; SAVE THE DIGIT 0:3 OF "VMINDIG" IN VARIABLE "IN"
GOSUB LOOK_UP;  GO TO LABEL lOOK_UP
VMINLOOK[z] = OUT; SAVE THE VARIABLE OUT IN VMINLOOK0:3
NEXT Z;   NEXT LOOP

;--------
;-------VDAC------
Y = X;  SAVE THE VARIABLE "X" IN VARIABLE "Y"
GOSUB OBTAIN_VOLTAJE; GO TO LABEL OBTAIN_VOLTAJE
VOLTDAC = VCALC[0] + VCALC[1] + VCALC[2] + VCALC[3]; OBTAIN  VOLTAGE IN THE DAC
FOR Z = 0 TO 3 ; STARTING LOOP
VDACDIG[Z] = VOLTDAC DIG Z; GET DIGIT 0 TO 3 WITH THE VOLTAGE
IN = VDACDIG[Z];   SAVE THE DIGIT 0:3 OF "VDACDIG" IN VARIABLE "IN"
GOSUB LOOK_UP;     GO TO LABEL LOOK_UP
VDACLOOK[Z] = OUT; SAVE THE VARIABLE "OUT" IN VDACLOOK;
NEXT Z;   NEXT LOOP
RETURN; RETURN TO WHERE IT´S CALLED
;-------------------------------------------------------------------------------
OBTAIN_VOLTAJE:
VCALC[0] = 0;
VCALC[1] = 0;       CLEAR VARIABLES
VCALC[2] = 0;
VCALC[3] = 0;
VCALC[0] = Y*9;           511*9 = 4599
VCALC[1] = (Y*7)/10;      511*7/10 = 357
VCALC[2] = (Y*8)/100;     511*8/100= 40
VCALC[3] = (Y*4)/1000;    511*4/1000= 2
rETURN ;                  TOTAL = 4.998V
;-------------------------------------------------------------------------------
LOOK_UP:
LOOKUP IN,["0123456789ABCDEF"],OUT; DECODING DIGITS
RETURN; RETURN TO WHERE IT´S CALLED



;-------------------------------------------------------
end
