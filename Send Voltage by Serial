'*  Name    : UNTITLED.BAS                                      *
'*  Author  : [select VIEW...EDITOR OPTIONS]                    *
'*  Notice  : Copyright (c) 2020 [select VIEW...EDITOR OPTIONS] *
'*          : All Rights Reserved                               *
'*  Date    : 12/9/2020                                         *
'*  Version : 1.0                                               *
'*  Notes   :                                                   *
'*          :                                                   *
'****************************************************************
  #CONFIG; FUSSES 
    __config _CONFIG1,  _FOSC_INTOSC & _PWRTE_ON & _MCLRE_OFF & _CP_OFF & _BOREN_ON & _CLKOUTEN_OFF
    __config _CONFIG2,  _WRT_OFF & _PPS1WAY_OFF & _ZCD_OFF & _PLLEN_OFF & _STVREN_ON & _BORV_LO & _LVP_OFF
    __config _CONFIG3,  _WDTCPS_WDTCPS4 & _WDTE_ON & _WDTCWS_WDTCWS100 & _WDTCCS_LFINTOSC
  #ENDCONFIG
;CONFIGURATION OF THE INTERNAL CLOCK
OSCCON = %01101010; $6A, INTERN CLOCK AT 4MHZ
OSCSTAT = %00011111; $1F, INTERNAL CLOCK ENABLE
OSCTUNE = 0;INTERNAL OSC WORKS AT THE CALIBRATED FREQUENCY    
; PINS CONFIGURATION
;--PORTA--
TRISA = %00111100; RA3:RA4:RA5 AS INPUT 
ANSELA = %00000100; ALL PINS ARE DIGITAL
OPTION_REG.7=0; PULL-UPS ENABLED
WPUA = %00011000; RA2:RA4 ENABLED PULL UPS
;LATA = 0
;--PORTB--
TRISB = %11110000; RB4:RA5:RB6 AS INPUT
ANSELB = 0; ALL PINS ARE DIGITAL
WPUB = %11110000; RB4:RA5:RB6 ENABLED PULL UPS
LATB = 0
;--PORTC--
TRISC = %11100000; RA5:RA6:RA7 AS INPUT
ANSELC = %10000000; RA6:RA7 ARE ANALOG
WPUC = %01100000; PULL UPS DISABLED
LATC = 0;
;---
PORTA = 0;
PORTB = 0;
PORTC =0;

;TIMER-------------------------------------
T1CON = %10000100;ENABLE TIMER 1, T1CKL
;--LCD CONFIGURATION ----------------------
DEFINE LCD_DREG PORTC ' PORTC is LCD data port
DEFINE LCD_DBIT 0 ' PORTC.0 is the data LSB
DEFINE LCD_RSREG PORTA ' RS is connected to PORTA.0
DEFINE LCD_RSBIT 0
DEFINE LCD_EREG PORTA ' E is connected to PORTA.1
DEFINE LCD_EBIT 1
DEFINE LCD_BITS 4 ' 4  data line         
DEFINE LCD_LINES 2 '  2-line display
DEFINE LCD_COMMANDUS 1500 ' Use 1500uS command delay
DEFINE LCD_DATAUS 44 ' Use 44uS data delay
;;-----------------------------------------------------
ADCON0 = %00001101;ADC ENABLED
ADCON1 = %10000000; RIGHT JUSTIFIED
;----TIMER 3 SET-UP-----------------------
T3CON = %11110101;  TURN ON TIMER 3, LFINTOSC, INPUT, 31kHz, prescale 8
;---------------------------------
;CONFIGURATION OF THE SERIAL PORT
TX1STA = %00100000;$20, ENABLE TRANSMISSION, 8 BITS, LOW VELOCITY
BAUD1CON = %00000000; NO INVERTER, DETECTION OF THE FALLING EDGE
SPBRGL = 25; CALCULATED OF 2400 BPS
RB7PPS = %10010; ACTIVATING PPS MODULE
RC1STA = %10010000; ENABLED SERIAL PORT
RXPPS = %01101
DEFINE HSER_CLROERR 1; CLEAR OVERRUN ERROR 

;VARIABLES
'C var byte;
'PULSOS VAR WORD
FD VAR BYTE[5];
LD VAR BYTE[4];
LITER VAR WORD
IN VAR BYTE
IN2 VAR BYTE
OUT VAR BYTE
OUT2 VAR BYTE
MUESTRAS VAR BYTE;
X VAR BYTE;
ADC VAR WORD;
'K VAR WORD;
REMAINDER VAR WORD
VIN VAR WORD
CH VAR BYTE;
'SEG VAR WORD;
VD VAR BYTE[4]
KD VAR BYTE[4]
T VAR BYTE[4]
TIME VAR WORD
TMR VAR WORD;
FLU VAR WORD
A VAR BYTE 
DIF VAR WORD
'DAT var word;
'DIR VAR WORD;
ANT VAR WORD
'Counter var word;
'RV var byte;
'RD Var word
'TR VAR WORD
;ALIAS ---
PB1 VAR PORTC.5
LCDOUT $FE,$80,"RPM Monitor"
LCDOUT $FE,$C0,"A. Chavez"
pause 1500
LCDOUT $FE,$80,"ITM(c)  "
LCDOUT $FE,$C0,"4/26/22 "
pause 1500

PRACTICE_4:
    TMR3L = 0;
    TMR3H = 0;CLEAR TIMER 3
    'SEG = 0;
    
    TMR1L = 0; 
    TMR1H = 0;
    HERE:
        IF PB1 = 0 THEN
            'flu = 0;
            'liter = 0
            TMR1L = 0
            TMR1H = 0;
            ANT=0
            DIF = 0
        ENDIF
        T1CON.0 = 1
        TMR.BYTE0 = TMR1L; LOW REGISTER
        TMR.BYTE1 = TMR1H; HIGH REGISTER
        ANT= TMR;
        PAUSE 1000
        TMR.BYTE0 = TMR1L; LOW REGISTER
        TMR.BYTE1 = TMR1H; HIGH REGISTER
        DIF= TMR-ANT;           OBTAIN THE DIFFERENCE OF PULSES
        REMAINDER= TMR*100; 
        'LITER = DIV32 K;        DIVIDE BY THE CONSTANT
        REMAINDER = DIF*100
        'FLU = DIV32 K;          DIVIDE BY THE CONSTANT
        
        FOR X = 0 TO 4
            FD[X] = FLU DIG X
            LD[X] = LITER DIG X
        NEXT X
    TIME.BYTE0 = TMR3L;
    TIME.BYTE1 = TMR3H;
    
    LCDOUT $FE,$80,DEC LD[4],DEC LD[3],".",DEC LD[2],DEC LD[1],DEC LD[0],"L "
    IF (MUESTRAS =< 3) THEN
        LCDOUT $FE,$C0,DEC FD[2],DEC FD[1],DEC FD[0],"mL/S   " 
    ELSE 
        ch = 9;
        gosub ADC_READ;
        IF (MUESTRAS > 5) THEN MUESTRAS = 0;
        LCDOUT $FE,$C0,"%=",DEC VD[3],DEC VD[2],DEC VD[1],".",DEC VD[0],"  "
    ENDIF
    MUESTRAS = MUESTRAS + 1;


    
        IF PB1 = 0 THEN
            flu = 0;
            liter = 0
            TMR1L = 0
            TMR1H = 0;
            ANT=0
            DIF = 0
        ENDIF

GOTO HERE

ADC_READ:
    CH = CH<<2;
    ADCON0 = CH^%10000001; BITWISE XNOR
    PAUSE 1
    ADCON0.1 = 1;   
    HERE_ADC: IF ADCON0.1 = 1 THEN HERE_ADC; STAY HERE WHILE CONVERSION IS ready
    ADCON0.0 = 0;
    ADC.BYTE0 = ADRESL;     SAVE LOWER REGISTER OF THE ADC IN VARIABLE VIN
    ADC.BYTE1 = ADRESH;     SAVE HIGHER REGISTER OF THE ADC IN VARIABLE VIN
    DISABLE
    REMAINDER = ADC*4887;              MULTIPLYING BY RESLSB = 4.8887
    VIN = div32 1000;              PERFORM 16-BITS DIVISION 
    ENABLE 
    FOR X = 0 TO 3
        VD[X] = VIN DIG X
    NEXT X 
return
;-------------------------------------------------------------------------------
SEND:; LABEL SEND;
    for x = 0 to 3
          in = vd[x]
          IN2 =T[X]
          lookup IN,["0123456789"],out
          LOOKUP IN2,["0123456789"],OUT2
          VD[X]=OUT
          T[X] = OUT2
    next x

    FOR X = 0 TO 1
        HSEROUT ["VA", VD[3], VD[2], VD[1],VD[0],10]; SEND DATA BY WAY OF SERIAL
        HSEROUT ["TB", T[3],T[2],T[1],T[0],10]
        HSEROUT ["ZZ",DEC A,10]
    NEXT X
    
RETURN; GO TO THE IS CALLING



